<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>你好</title>
    <url>/2020/06/22/10739.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>
]]></content>
      <categories>
        <category>SSM</category>
        <category>helloword</category>
      </categories>
      <tags>
        <tag>helloword</tag>
      </tags>
  </entry>
  <entry>
    <title>程序员的在线工具</title>
    <url>/2020/06/25/9256955.html</url>
    <content><![CDATA[<p>程序员的在线工具箱</p>
<p><a href="https://tool.lu/" target="_blank" rel="noopener">https://tool.lu/</a></p>
<p><img src= "/img/loading.gif" data-src="C:%5CUsers%5CM%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200625161025790.png" alt="image-20200625161025790"></p>
]]></content>
      <categories>
        <category>Utils</category>
      </categories>
      <tags>
        <tag>工具</tag>
      </tags>
  </entry>
  <entry>
    <title>easyui</title>
    <url>/2020/06/20/56985.html</url>
    <content><![CDATA[<h1 id="1-EasyUI介绍"><a href="#1-EasyUI介绍" class="headerlink" title="1.EasyUI介绍"></a>1.EasyUI介绍</h1><p>思考:如何学习UI(交互友好—-“好看”)  JS/CSS   主要由web开发工程师.</p>
<p>​        1.复制粘贴看现象</p>
<p>​        2.修改代码看结果</p>
<h2 id="1-1EasyUI介绍"><a href="#1-1EasyUI介绍" class="headerlink" title="1.1EasyUI介绍"></a>1.1EasyUI介绍</h2><h3 id="1-1-1官网介绍"><a href="#1-1-1官网介绍" class="headerlink" title="1.1.1官网介绍"></a>1.1.1官网介绍</h3><p>easyui是一种基于jQuery、Angular.、Vue和React的用户界面插件集合。</p>
<p>easyui为创建现代化，互动，JavaScript应用程序，提供必要的功能。</p>
<p>使用easyui你不需要写很多代码，你只需要通过编写一些简单HTML标记，就可以定义用户界面。</p>
<p>easyui是个完美支持HTML5网页的完整框架。</p>
<p>easyui节省您网页开发的时间和规模。</p>
<p>easyui很简单但功能强大的。</p>
<h3 id="1-1-2EasyUIDemo演示"><a href="#1-1-2EasyUIDemo演示" class="headerlink" title="1.1.2EasyUIDemo演示"></a>1.1.2EasyUIDemo演示</h3><p>1.导入JS/CSS</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;title&gt;EasyUI-拖动&lt;/title&gt;</span><br><span class="line">&lt;!--引入jquery的js，EasyUI的执行需要依赖于jQuery  --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span></span><br><span class="line">	src="/js/jquery-easyui-1.4.1/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;!--easyUI的js主文件  --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span></span><br><span class="line">	src="/js/jquery-easyui-1.4.1/jquery.easyui.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;!--国际化的js文件  --&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span></span><br><span class="line">	src="/js/jquery-easyui-1.4.1/locale/easyui-lang-zh_CN.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;!--引入easyUI的样式  --&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span></span><br><span class="line">	href=<span class="string">"/js/jquery-easyui-1.4.1/themes/icon.css"</span> /&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span></span><br><span class="line">	href=<span class="string">"/js/jquery-easyui-1.4.1/themes/default/easyui.css"</span> /&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;style type=<span class="string">"text/css"</span>&gt;</span><br><span class="line">div &#123;</span><br><span class="line">	height: <span class="number">200</span>px;</span><br><span class="line">	width: <span class="number">200</span>px;</span><br><span class="line">	background: green;</span><br><span class="line">	border: 10px solid #abcdef;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div class="easyui-draggable"&gt;拖动DIV&lt;/div&gt;</span><br><span class="line">		&lt;div class="easyui-draggable"&gt;测试div&lt;/div&gt;</span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>2.进度条</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;title&gt;EasyUI-进度条&lt;/title&gt;</span><br><span class="line">&lt;script type="text/javascript" src="/js/jquery-easyui-1.4.1/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type="text/javascript" src="/js/jquery-easyui-1.4.1/jquery.easyui.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type="text/javascript" src="/js/jquery-easyui-1.4.1/locale/easyui-lang-zh_CN.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"/js/jquery-easyui-1.4.1/themes/icon.css"</span> /&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"/js/jquery-easyui-1.4.1/themes/default/easyui.css"</span> /&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">	$(function()&#123;</span><br><span class="line">		</span><br><span class="line">		$(<span class="string">"#b"</span>).click(function()&#123;</span><br><span class="line">			onload();	</span><br><span class="line">		&#125;)</span><br><span class="line">		</span><br><span class="line">		<span class="comment">/*采用递归的方法实现进度条刷新</span></span><br><span class="line"><span class="comment">			setTimeout(xxxFunction,100);	//演示加载函数</span></span><br><span class="line"><span class="comment">		*/</span></span><br><span class="line">		<span class="keyword">var</span> i = <span class="number">0</span>;</span><br><span class="line">		<span class="function">function <span class="title">onload</span><span class="params">()</span></span>&#123;</span><br><span class="line">			<span class="comment">//该函数是easyUI提供的,使用别人的JS,必须满足要求  value是固定的</span></span><br><span class="line">			$(<span class="string">'#p'</span>).progressbar(&#123;value:i++&#125;);</span><br><span class="line">			<span class="keyword">if</span>(i&lt;=<span class="number">100</span>)&#123;</span><br><span class="line">				<span class="comment">/*延时加载,到了指定的时间,则执行函数,时间</span></span><br><span class="line"><span class="comment">				单位是毫秒*/</span></span><br><span class="line">				setTimeout(function()&#123;onload();&#125;, <span class="number">1000</span>)</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;)</span><br><span class="line">	</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">	&lt;body&gt;</span><br><span class="line">		&lt;div id="p" class="easyui-progressbar" style="width:800px;"&gt;&lt;/div&gt;</span><br><span class="line">		&lt;input id=<span class="string">"b"</span> type=<span class="string">"button"</span> value=<span class="string">"加载"</span>/&gt; </span><br><span class="line">	&lt;/body&gt;</span><br><span class="line">	</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>

<p>3.按钮:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!--该页面中主要展现 不同的按钮格式  --&gt;</span><br><span class="line">&lt;a id="btn1" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-undo'"&gt;测试字体长度大小&lt;/a&gt;</span><br><span class="line">&lt;a id="btn2" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-add'"&gt;新增&lt;/a&gt;</span><br><span class="line">&lt;a id="btn3" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-edit'"&gt;编辑&lt;/a&gt;</span><br><span class="line">&lt;a id="btn4" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-clear'"&gt;清空&lt;/a&gt;</span><br><span class="line">&lt;a id="btn5" href="#" class="easyui-linkbutton" data-options="iconCls:'icon-remove'"&gt;移除&lt;/a&gt;</span><br></pre></td></tr></table></figure>
<h2 id="1-2京淘后台页面搭建"><a href="#1-2京淘后台页面搭建" class="headerlink" title="1.2京淘后台页面搭建"></a>1.2京淘后台页面搭建</h2><h3 id="1-2-1页面布局"><a href="#1-2-1页面布局" class="headerlink" title="1.2.1页面布局"></a>1.2.1页面布局</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;div id=<span class="string">"cc"</span> <span class="class"><span class="keyword">class</span></span>=<span class="string">"easyui-layout"</span> style=<span class="string">"width:600px;height:400px;"</span>&gt;   </span><br><span class="line">    &lt;div data-options="region:'north',title:'North Title',split:true" style="height:100px;"&gt;&lt;/div&gt;   </span><br><span class="line">    &lt;div data-options="region:'south',title:'South Title',split:true" style="height:100px;"&gt;&lt;/div&gt;   </span><br><span class="line">    &lt;div data-options="region:'east',iconCls:'icon-reload',title:'East',split:true" style="width:100px;"&gt;&lt;/div&gt;   </span><br><span class="line">    &lt;div data-options="region:'west',title:'West',split:true" style="width:100px;"&gt;&lt;/div&gt;   </span><br><span class="line">    &lt;div data-options="region:'center',title:'center title'" style="padding:5px;background:#eee;"&gt;&lt;/div&gt;   </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>

<h3 id="1-2-2树形结构"><a href="#1-2-2树形结构" class="headerlink" title="1.2.2树形结构"></a>1.2.2树形结构</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!-- ul-li 无序列表       ol-li 有序列表        --&gt;</span><br><span class="line">		&lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"easyui-tree"</span>&gt;</span><br><span class="line"></span><br><span class="line">			&lt;li&gt;</span><br><span class="line">				&lt;span&gt;商品管理&lt;/span&gt;</span><br><span class="line">				&lt;ul&gt;</span><br><span class="line">					&lt;li&gt;商品查询&lt;/li&gt;</span><br><span class="line">					&lt;li&gt;商品新增&lt;/li&gt;</span><br><span class="line">				&lt;/ul&gt;</span><br><span class="line">			&lt;/li&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">			&lt;li&gt;</span><br><span class="line">				&lt;span&gt;内容管理&lt;/span&gt;</span><br><span class="line">				&lt;ul&gt;</span><br><span class="line">					&lt;li&gt;内容新增&lt;/li&gt;</span><br><span class="line">				&lt;/ul&gt;</span><br><span class="line">			&lt;/li&gt;</span><br><span class="line">			</span><br><span class="line">			&lt;li&gt;</span><br><span class="line">				&lt;span&gt;四大名著&lt;/span&gt;</span><br><span class="line">				&lt;ul&gt;</span><br><span class="line">					&lt;li&gt;三国演义&lt;/li&gt;</span><br><span class="line">					&lt;li&gt;水浒传&lt;/li&gt;</span><br><span class="line">					&lt;li&gt;红楼梦&lt;/li&gt;</span><br><span class="line">					&lt;li&gt;西游记&lt;/li&gt;</span><br><span class="line">					&lt;li&gt;.....&lt;/li&gt;</span><br><span class="line">				&lt;/ul&gt;</span><br><span class="line">				</span><br><span class="line">			&lt;/li&gt;</span><br><span class="line">			</span><br><span class="line">		&lt;/ul&gt;</span><br></pre></td></tr></table></figure>

<h3 id="1-2-3选项卡技术"><a href="#1-2-3选项卡技术" class="headerlink" title="1.2.3选项卡技术"></a>1.2.3选项卡技术</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html PUBLIC <span class="string">"-//W3C//DTD HTML 4.01 Transitional//EN"</span> <span class="string">"http://www.w3.org/TR/html4/loose.dtd"</span>&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta http-equiv=<span class="string">"Content-Type"</span> content=<span class="string">"text/html; charset=utf-8"</span>&gt;</span><br><span class="line">&lt;title&gt;Insert title here&lt;/title&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"/js/jquery-easyui-1.4.1/themes/default/easyui.css"</span> /&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"/js/jquery-easyui-1.4.1/themes/icon.css"</span> /&gt;</span><br><span class="line">&lt;link rel=<span class="string">"stylesheet"</span> type=<span class="string">"text/css"</span> href=<span class="string">"/css/jt.css"</span> /&gt;</span><br><span class="line">&lt;script type="text/javascript" src="/js/jquery-easyui-1.4.1/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type="text/javascript" src="/js/jquery-easyui-1.4.1/jquery.easyui.min.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;script type="text/javascript" src="/js/jquery-easyui-1.4.1/locale/easyui-lang-zh_CN.js"&gt;&lt;/script&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body <span class="class"><span class="keyword">class</span></span>=<span class="string">"easyui-layout"</span>&gt;</span><br><span class="line"></span><br><span class="line">  &lt;div data-options=<span class="string">"region:'west',title:'菜单',split:true"</span> style=<span class="string">"width:10%;"</span>&gt;</span><br><span class="line">   		&lt;ul <span class="class"><span class="keyword">class</span></span>=<span class="string">"easyui-tree"</span>&gt;</span><br><span class="line">   			&lt;li&gt;</span><br><span class="line">   			&lt;span&gt;商品管理&lt;/span&gt;</span><br><span class="line">   			&lt;ul&gt;</span><br><span class="line">   			&lt;li&gt;&lt;a onclick="addTab('商品新增','/item-add')"&gt;商品新增&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">   			&lt;li&gt;&lt;a onclick="addTab('商品查询','/item-list')"&gt;商品查询&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">   			&lt;li&gt;&lt;a onclick="addTab('商品更新','/item-update')"&gt;商品更新&lt;/a&gt;&lt;/li&gt;</span><br><span class="line">   			&lt;/ul&gt;</span><br><span class="line">			&lt;/li&gt;</span><br><span class="line">			</span><br><span class="line">			&lt;li&gt;</span><br><span class="line">   			&lt;span&gt;网站内容管理&lt;/span&gt;</span><br><span class="line">   			&lt;ul&gt;</span><br><span class="line">   			&lt;li&gt;内容新增&lt;/li&gt;</span><br><span class="line">   			&lt;li&gt;内容修改&lt;/li&gt;</span><br><span class="line">   			&lt;/ul&gt;</span><br><span class="line">			&lt;/li&gt;</span><br><span class="line">   		</span><br><span class="line">   		&lt;/ul&gt;</span><br><span class="line">   &lt;/div&gt;</span><br><span class="line">   &lt;div id="tt" class="easyui-tabs" data-options="region:'center',title:'首页'"&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"><span class="comment">//addTab('商品新增','/item-add')</span></span><br><span class="line"><span class="function">function <span class="title">addTab</span><span class="params">(title, url)</span></span>&#123;</span><br><span class="line">	<span class="comment">//.tabs 选项卡函数  easyUI单独提供的  判断当前title是否存在</span></span><br><span class="line">    <span class="keyword">if</span> ($(<span class="string">'#tt'</span>).tabs(<span class="string">'exists'</span>, title))&#123;  </span><br><span class="line">        $(<span class="string">'#tt'</span>).tabs(<span class="string">'select'</span>, title);  <span class="comment">//如果存在,则选中该选项卡.</span></span><br><span class="line">    &#125; </span><br><span class="line">	<span class="comment">//如果当前选项卡 不存在</span></span><br><span class="line">    <span class="keyword">else</span> &#123;  </span><br><span class="line">        <span class="comment">/* iframe 画中画效果 */</span></span><br><span class="line">        <span class="keyword">var</span> content = <span class="string">'&lt;iframe scrolling="auto" frameborder="0"  src="https://map.baidu.com/@12955267,4852394,12.91z" style="width:100%;height:100%;"&gt;&lt;/iframe&gt;'</span>;  </span><br><span class="line">		<span class="comment">//新增选项卡</span></span><br><span class="line">        $(<span class="string">'#tt'</span>).tabs(<span class="string">'add'</span>,&#123;  </span><br><span class="line">            title:title,  </span><br><span class="line">            content:content,  	<span class="comment">//选项卡打开之后展现的效果</span></span><br><span class="line">            closable:<span class="keyword">true</span>  </span><br><span class="line">        &#125;);  </span><br><span class="line">    &#125;  </span><br><span class="line">&#125; </span><br><span class="line"></span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<p>​        页面效果:</p>
<p><img src= "/img/loading.gif" data-src="day05.assets/image-20200410110351374.png" alt="image-20200410110351374"></p>
<h2 id="1-3默认页面跳转问题"><a href="#1-3默认页面跳转问题" class="headerlink" title="1.3默认页面跳转问题"></a>1.3默认页面跳转问题</h2><h3 id="1-3-1问题说明"><a href="#1-3-1问题说明" class="headerlink" title="1.3.1问题说明"></a>1.3.1问题说明</h3><p>当用户访问<a href="http://localhost:8091/地址时,用户访问的页面是谁?如何转化的" target="_blank" rel="noopener">http://localhost:8091/地址时,用户访问的页面是谁?如何转化的</a>???</p>
<h3 id="1-3-2解释"><a href="#1-3-2解释" class="headerlink" title="1.3.2解释"></a>1.3.2解释</h3><p>1.传统的web项目: web.xml配置文件 在其中有一个默认的页面配置 <welcome>index.jsp/html</welcome>,如果访问网站的根目录,则默认跳转到指定的页面中.</p>
<p>2.SpringBoot简化了web项目的配置,但是保留了默认页面的配置.  如果用户通过localhost:8091服务访问时,springBoot会发起/index请求.</p>
<p>需要经过视图解析器配置动态拼接路径<strong>/WEB-INF/views/index.jsp</strong>之后查找具体的页面信息.</p>
<p><img src= "/img/loading.gif" data-src="day05.assets/image-20200410112222167.png" alt="image-20200410112222167"></p>
<p>源码分析:</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="number">2020</span>-<span class="number">04</span>-<span class="number">10</span> <span class="number">11</span>:<span class="number">23</span>:<span class="number">57.435</span>  INFO <span class="number">3248</span> --- [  restartedMain] o.s.b.a.w.s.WelcomePageHandlerMapping    : Adding welcome page template: index</span><br></pre></td></tr></table></figure>

<h2 id="1-4京淘后台页面通用跳转"><a href="#1-4京淘后台页面通用跳转" class="headerlink" title="1.4京淘后台页面通用跳转"></a>1.4京淘后台页面通用跳转</h2><h3 id="1-4-1页面url分析"><a href="#1-4-1页面url分析" class="headerlink" title="1.4.1页面url分析"></a>1.4.1页面url分析</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;li data-options="attributes:&#123;'url':'/page/item-add'&#125;"&gt;新增商品&lt;/li&gt;</span><br><span class="line">	         		&lt;li data-options="attributes:&#123;'url':'/page/item-list'&#125;"&gt;查询商品&lt;/li&gt;</span><br><span class="line">	         		&lt;li data-options="attributes:&#123;'url':'/page/item-param-list'&#125;"&gt;规格参数&lt;/li&gt;</span><br></pre></td></tr></table></figure>

<h3 id="1-4-2问题说明"><a href="#1-4-2问题说明" class="headerlink" title="1.4.2问题说明"></a>1.4.2问题说明</h3><p>​        如果每个菜单都有自己的url请求地址.那么如果需要跳转页面,则后台的Controller中需要编辑与之对应的requestMapping方法注解.如果标签很多,则造成代码冗余.</p>
<h3 id="1-4-3解决方案"><a href="#1-4-3解决方案" class="headerlink" title="1.4.3解决方案"></a>1.4.3解决方案</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">IndexController</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * url:/page/item-add</span></span><br><span class="line"><span class="comment">	 * 目的:跳转页面</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="comment">/*@RequestMapping("/page/item-add")</span></span><br><span class="line"><span class="comment">	public String itemAdd() &#123;</span></span><br><span class="line"><span class="comment">		</span></span><br><span class="line"><span class="comment">		//跳转到系统的商品新增页面</span></span><br><span class="line"><span class="comment">		return "item-add";</span></span><br><span class="line"><span class="comment">	&#125;*/</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 1./page/item-add</span></span><br><span class="line"><span class="comment">	 * 2./page/item-list</span></span><br><span class="line"><span class="comment">	 * 3./page/item-param-list</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * 需求:使用一个RequestMapping方法,实现通用页面跳转</span></span><br><span class="line"><span class="comment">	 * 分析: item-add请求与跳转页面的名称一致的item-add.</span></span><br><span class="line"><span class="comment">	 * 思路:如果可以动态的获取url地址中的数据,则可以动态的实现页面跳转!!!</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * RestFul风格1:</span></span><br><span class="line"><span class="comment">	 * 	1.参数与参数之间使用/分割</span></span><br><span class="line"><span class="comment">	 * 	2.需要接收的参数使用"&#123;&#125;"进行包裹,之后变量名称自定</span></span><br><span class="line"><span class="comment">	 * 	3.利用<span class="doctag">@PathVariable</span> 将参数进行动态的转化.</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@PathVariable</span>注解说明</span></span><br><span class="line"><span class="comment">	 * 	参数1  name/value  指定参数进行转化</span></span><br><span class="line"><span class="comment">	 *  参数2  required    是否为必填项  如果为true则参数必须有值.</span></span><br><span class="line"><span class="comment">	 *  接收参数的规则:名称最好一致.</span></span><br><span class="line"><span class="comment">	 *  </span></span><br><span class="line"><span class="comment">	 *  简化的后台Controller方法的个数.</span></span><br><span class="line"><span class="comment">	 *  </span></span><br><span class="line"><span class="comment">	 *  </span></span><br><span class="line"><span class="comment">	 * RestFul风格2:</span></span><br><span class="line"><span class="comment">	 * 需求:简化用户的url请求写法.利用公共的url实现用户的CURD操作.</span></span><br><span class="line"><span class="comment">	 * 例子:</span></span><br><span class="line"><span class="comment">	 * 		1.新增   localhost:8091/user/saveUser?xxxx</span></span><br><span class="line"><span class="comment">	 * 		2.修改   localhost:8091/user/updateUser?xxx</span></span><br><span class="line"><span class="comment">	 * 		3.删除   localhost:8091/user/deleteUser?xxx</span></span><br><span class="line"><span class="comment">	 * 		4.查询   localhost:8091/user/findUser?xxx</span></span><br><span class="line"><span class="comment">	 * 思想: 能否利用localhost:8091/user 之后分别实现curd操作?</span></span><br><span class="line"><span class="comment">	 * 实现思路:</span></span><br><span class="line"><span class="comment">	 * 	请求类型有7种  常见的有4种    GET/POST/PUT/DELETE</span></span><br><span class="line"><span class="comment">	 * 	1.localhost:8091/user  type:get     查询操作</span></span><br><span class="line"><span class="comment">	 * 	2.localhost:8091/user  type:post    新增操作</span></span><br><span class="line"><span class="comment">	 * 	3.localhost:8091/user  type:put     更新操作</span></span><br><span class="line"><span class="comment">	 * 	4.localhost:8091/user  type:delete  删除操作</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * 总结:通过修改请求的类型实现url请求的通用.</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@RequestMapping</span>(<span class="string">"/page/&#123;moduleName&#125;"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> String <span class="title">itemAdd</span><span class="params">(@PathVariable(name=<span class="string">"moduleName"</span>)</span> String moduleName) </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> moduleName;</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">//指定请求类型接收    该方法只能接收post请求</span></span><br><span class="line">	<span class="comment">//@RequestMapping(value="/user",method=RequestMethod.POST)</span></span><br><span class="line">	<span class="comment">/*@PostMapping("/user")</span></span><br><span class="line"><span class="comment">	public void saveUser() &#123;</span></span><br><span class="line"><span class="comment">		System.out.println("完成用户新增操作!!!!");</span></span><br><span class="line"><span class="comment">	&#125;*/</span></span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="2-完成商品列表展现"><a href="#2-完成商品列表展现" class="headerlink" title="2.完成商品列表展现"></a>2.完成商品列表展现</h1><h2 id="2-1EasyUI中表格数据展现"><a href="#2-1EasyUI中表格数据展现" class="headerlink" title="2.1EasyUI中表格数据展现"></a>2.1EasyUI中表格数据展现</h2><h3 id="2-1-1页面分析"><a href="#2-1-1页面分析" class="headerlink" title="2.1.1页面分析"></a>2.1.1页面分析</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">"easyui-datagrid"</span> style=<span class="string">"width:500px;height:300px"</span> </span><br><span class="line">			data-options=<span class="string">"url:'datagrid_data.json',method:'get',fitColumns:true,singleSelect:false,pagination:true"</span>&gt; </span><br><span class="line">				&lt;thead&gt; </span><br><span class="line">					&lt;tr&gt; </span><br><span class="line">						&lt;th data-options="field:'code',width:100"&gt;Code&lt;/th&gt; </span><br><span class="line">						&lt;th data-options="field:'name',width:100"&gt;Name&lt;/th&gt; </span><br><span class="line">						&lt;th data-options="field:'price',width:100,align:'right'"&gt;Price&lt;/th&gt;</span><br><span class="line">					&lt;/tr&gt; </span><br><span class="line">				&lt;/thead&gt; </span><br><span class="line">			&lt;/table&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-1-2页面返回值"><a href="#2-1-2页面返回值" class="headerlink" title="2.1.2页面返回值"></a>2.1.2页面返回值</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	<span class="string">"total"</span>:<span class="number">2000</span>,   </span><br><span class="line">	<span class="string">"rows"</span>:[</span><br><span class="line">		&#123;<span class="string">"code"</span>:<span class="string">"A"</span>,<span class="string">"name"</span>:<span class="string">"果汁"</span>,<span class="string">"price"</span>:<span class="string">"20"</span>&#125;,</span><br><span class="line">		&#123;<span class="string">"code"</span>:<span class="string">"B"</span>,<span class="string">"name"</span>:<span class="string">"汉堡"</span>,<span class="string">"price"</span>:<span class="string">"30"</span>&#125;,</span><br><span class="line">		&#123;<span class="string">"code"</span>:<span class="string">"C"</span>,<span class="string">"name"</span>:<span class="string">"鸡柳"</span>,<span class="string">"price"</span>:<span class="string">"40"</span>&#125;,</span><br><span class="line">		&#123;<span class="string">"code"</span>:<span class="string">"D"</span>,<span class="string">"name"</span>:<span class="string">"可乐"</span>,<span class="string">"price"</span>:<span class="string">"50"</span>&#125;,</span><br><span class="line">		&#123;<span class="string">"code"</span>:<span class="string">"E"</span>,<span class="string">"name"</span>:<span class="string">"薯条"</span>,<span class="string">"price"</span>:<span class="string">"10"</span>&#125;,</span><br><span class="line">		&#123;<span class="string">"code"</span>:<span class="string">"F"</span>,<span class="string">"name"</span>:<span class="string">"麦旋风"</span>,<span class="string">"price"</span>:<span class="string">"20"</span>&#125;,</span><br><span class="line">		&#123;<span class="string">"code"</span>:<span class="string">"G"</span>,<span class="string">"name"</span>:<span class="string">"套餐"</span>,<span class="string">"price"</span>:<span class="string">"100"</span>&#125;</span><br><span class="line">	]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-1-3JS实现表格数据"><a href="#2-1-3JS实现表格数据" class="headerlink" title="2.1.3JS实现表格数据"></a>2.1.3JS实现表格数据</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line">	<span class="comment">/*通过js创建表格  */</span></span><br><span class="line">	$(function()&#123;</span><br><span class="line">		$(<span class="string">"#table3"</span>).datagrid(&#123;</span><br><span class="line">			<span class="comment">/*定义工具栏  */</span></span><br><span class="line">			toolbar: [&#123;  		</span><br><span class="line">				  iconCls: <span class="string">'icon-edit'</span>,</span><br><span class="line">				  text:<span class="string">'编辑'</span>,</span><br><span class="line">				  handler: function()&#123;alert(<span class="string">"点击工具栏"</span>)&#125;  	</span><br><span class="line">				  &#125;,&#123;  		</span><br><span class="line">					  iconCls: <span class="string">'icon-add'</span>,</span><br><span class="line">					  text:<span class="string">'新增'</span>,</span><br><span class="line">					  handler: function()&#123;alert(<span class="string">"执行新增任务"</span>)&#125;  	</span><br><span class="line">					  &#125;,&#123;  		</span><br><span class="line">				  iconCls: <span class="string">'icon-help'</span>,  		</span><br><span class="line">				  handler: function()&#123;alert(<span class="string">'帮助工具栏'</span>)&#125;  	</span><br><span class="line">				  &#125;,<span class="string">'-'</span>,&#123;</span><br><span class="line">					  iconCls: <span class="string">'icon-save'</span>,</span><br><span class="line">					  handler: function()&#123;alert(<span class="string">'保存工具栏'</span>)&#125;</span><br><span class="line">				  &#125;], </span><br><span class="line">			<span class="comment">//定义行数据</span></span><br><span class="line">			columns:[[</span><br><span class="line">			&#123;field:<span class="string">'itemIds'</span>,checkbox:<span class="keyword">true</span>&#125;,</span><br><span class="line">			&#123;field:<span class="string">'itemId'</span>,title:<span class="string">'商品Id'</span>,width:<span class="number">100</span>&#125;, </span><br><span class="line">			&#123;field:<span class="string">'itemName'</span>,title:<span class="string">'商品名称'</span>,width:<span class="number">100</span>&#125;, </span><br><span class="line">			&#123;field:<span class="string">'itemDesc'</span>,title:<span class="string">'商品描述'</span>,width:<span class="number">100</span>,align:<span class="string">'right'</span>&#125; </span><br><span class="line">			]],</span><br><span class="line">			fitColumns:<span class="keyword">true</span>,		  <span class="comment">//自动适应</span></span><br><span class="line">			url:<span class="string">"datagrid_item.json"</span>, <span class="comment">//请求数据的地址</span></span><br><span class="line">			method:<span class="string">"get"</span>,			  <span class="comment">//提交方式</span></span><br><span class="line">			striped:<span class="keyword">false</span>,			  <span class="comment">//有条纹的行</span></span><br><span class="line">			nowrap:<span class="keyword">true</span>,			  <span class="comment">//提高加载性能</span></span><br><span class="line">			loadMsg:<span class="string">"正在加载"</span>,		  <span class="comment">//加载数据时打印</span></span><br><span class="line">			pagination:<span class="keyword">true</span>,		  <span class="comment">//分页加载</span></span><br><span class="line">			rownumbers:<span class="keyword">false</span>		  <span class="comment">//显示行号</span></span><br><span class="line">			<span class="comment">//singleSelect:true,	      //只允许选中一行数据</span></span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;)</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure>

<h2 id="2-2JSON"><a href="#2-2JSON" class="headerlink" title="2.2JSON"></a>2.2JSON</h2><h3 id="2-2-1JSON介绍"><a href="#2-2-1JSON介绍" class="headerlink" title="2.2.1JSON介绍"></a>2.2.1JSON介绍</h3><p><strong>JSON</strong>(JavaScript Object Notation) <strong>是一种轻量级的数据交换格式</strong>。 易于人阅读和编写。同时也易于机器解析和生成。 </p>
<p>JSON串的实质是字符串类型.</p>
<h3 id="2-2-2Object格式"><a href="#2-2-2Object格式" class="headerlink" title="2.2.2Object格式"></a>2.2.2Object格式</h3><p>对象是一个无序的“‘名称/值’对”集合。一个对象以 <code>{</code>左括号 开始， <code>}</code>右括号 结束。每个“名称”后跟一个 <code>:</code>冒号 ；“‘名称/值’ 对”之间使用 <code>,</code>逗号 分隔。</p>
<p><img src= "/img/loading.gif" data-src="day05.assets/image-20200410143443524.png" alt="image-20200410143443524"></p>
<p>例子:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;<span class="attr">"id"</span>:<span class="string">"1"</span>,<span class="attr">"name"</span>:<span class="string">"tomcat"</span>&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-2-3Array-数组格式"><a href="#2-2-3Array-数组格式" class="headerlink" title="2.2.3Array 数组格式"></a>2.2.3Array 数组格式</h3><p>​    数组是值（value）的<strong>有序</strong>集合。一个数组以 <code>[</code>左中括号 开始， <code>]</code>右中括号 结束。值之间使用 <code>,</code>逗号 分隔。</p>
<p><img src= "/img/loading.gif" data-src="day05.assets/image-20200410143824678.png" alt="image-20200410143824678"></p>
<p>例子:    </p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">[<span class="string">"tomcat"</span>,<span class="string">"BMW"</span>,<span class="string">"五菱宏光"</span>]</span><br></pre></td></tr></table></figure>

<h3 id="2-3-4复杂格式"><a href="#2-3-4复杂格式" class="headerlink" title="2.3.4复杂格式"></a>2.3.4复杂格式</h3><p>​    <strong>值（<em>value</em>）</strong>可以是双引号括起来的字符串（<em>string</em>）、数值(number)、<code>true</code>、<code>false</code>、 <code>null</code>、对象（object）或者数组（array）。这些结构可以<strong>嵌套</strong>。</p>
<p><img src= "/img/loading.gif" data-src="day05.assets/value.png" alt="value"></p>
<p>例子:</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">#value可以嵌套</span><br><span class="line">&#123;<span class="attr">"id"</span>:<span class="string">"1"</span>,<span class="attr">"name"</span>:<span class="string">"张三"</span>,</span><br><span class="line"> <span class="attr">"hobby"</span>:[[<span class="string">"睡着吃"</span>,<span class="string">"躺着吃"</span>],[<span class="string">"玩命喝"</span>,<span class="string">"往死喝"</span>],[<span class="string">"站着玩"</span>,<span class="string">"坐着玩"</span>],&#123;<span class="attr">"宠物"</span>:[<span class="string">"狗"</span>,<span class="string">"鱼"</span>,<span class="string">"乌龟"</span>]&#125;]&#125;</span><br></pre></td></tr></table></figure>

<p><img src= "/img/loading.gif" data-src="day05.assets/image-20200410144955246.png" alt="image-20200410144955246"></p>
<h3 id="2-3-5编辑VO对象"><a href="#2-3-5编辑VO对象" class="headerlink" title="2.3.5编辑VO对象"></a>2.3.5编辑VO对象</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//封装EasyUI表格数据</span></span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Accessors</span>(chain=<span class="keyword">true</span>)</span><br><span class="line"><span class="meta">@NoArgsConstructor</span></span><br><span class="line"><span class="meta">@AllArgsConstructor</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">EasyUITable</span> </span>&#123;</span><br><span class="line">	<span class="keyword">private</span> Integer total;</span><br><span class="line">	<span class="keyword">private</span> List&lt;Object&gt; rows;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-3商品列表实现"><a href="#2-3商品列表实现" class="headerlink" title="2.3商品列表实现"></a>2.3商品列表实现</h2><h3 id="2-3-1表设计"><a href="#2-3-1表设计" class="headerlink" title="2.3.1表设计"></a>2.3.1表设计</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">create table tb_item</span><br><span class="line">(</span><br><span class="line">   <span class="function">id                   <span class="title">bigint</span><span class="params">(<span class="number">10</span>)</span> not <span class="keyword">null</span> auto_increment comment '商品ID，也是商品编号',</span></span><br><span class="line"><span class="function">   title                <span class="title">varchar</span><span class="params">(<span class="number">100</span>)</span>,</span></span><br><span class="line"><span class="function">   sell_point           <span class="title">varchar</span><span class="params">(<span class="number">150</span>)</span>,</span></span><br><span class="line"><span class="function">   price                <span class="title">bigint</span><span class="params">(<span class="number">20</span>)</span> comment '单位为：分',</span></span><br><span class="line"><span class="function">   num                  <span class="title">int</span><span class="params">(<span class="number">10</span>)</span>,</span></span><br><span class="line"><span class="function">   barcode              <span class="title">varchar</span><span class="params">(<span class="number">30</span>)</span>,</span></span><br><span class="line"><span class="function">   image                <span class="title">varchar</span><span class="params">(<span class="number">500</span>)</span> comment '最多5张图片',</span></span><br><span class="line"><span class="function">   cid                  <span class="title">bigint</span><span class="params">(<span class="number">10</span>)</span>,</span></span><br><span class="line"><span class="function">   status               <span class="title">int</span><span class="params">(<span class="number">1</span>)</span> <span class="keyword">default</span> 1 comment '默认值为1，可选值：1正常，2下架，3删除',</span></span><br><span class="line"><span class="function">   created              datetime,</span></span><br><span class="line"><span class="function">   updated              datetime comment '列表排序时按修改时间排序，所以在新增时需要设置此值。',</span></span><br><span class="line"><span class="function">   primary <span class="title">key</span> <span class="params">(id)</span></span></span><br><span class="line"><span class="function">)</span>;</span><br></pre></td></tr></table></figure>

<h3 id="2-3-2编辑Item-POJO对象"><a href="#2-3-2编辑Item-POJO对象" class="headerlink" title="2.3.2编辑Item POJO对象"></a>2.3.2编辑Item POJO对象</h3><p>说明:将POJO对象放置到jt-common中目的是为了实现POJO数据的共用. 由于JT项目是分布式项目可能多个项目都需要使用POJO,则通过jt-common的方式进行统一的管理.</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@JsonIgnoreProperties</span>(ignoreUnknown=<span class="keyword">true</span>) <span class="comment">//表示JSON转化时忽略未知属性</span></span><br><span class="line"><span class="meta">@TableName</span>(<span class="string">"tb_item"</span>)</span><br><span class="line"><span class="meta">@Data</span></span><br><span class="line"><span class="meta">@Accessors</span>(chain=<span class="keyword">true</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Item</span> <span class="keyword">extends</span> <span class="title">BasePojo</span></span>&#123;</span><br><span class="line">	<span class="meta">@TableId</span>(type=IdType.AUTO)</span><br><span class="line">	<span class="keyword">private</span> Long id;				<span class="comment">//商品id</span></span><br><span class="line">	<span class="keyword">private</span> String title;			<span class="comment">//商品标题</span></span><br><span class="line">	<span class="keyword">private</span> String sellPoint;		<span class="comment">//商品卖点信息</span></span><br><span class="line">	<span class="comment">//1.98 *100=198/100=1.98</span></span><br><span class="line">	<span class="keyword">private</span> Long   price;			<span class="comment">//商品价格 Long &gt; dubbo   dubbo会有精度问题!!!</span></span><br><span class="line">	<span class="keyword">private</span> Integer num;			<span class="comment">//商品数量</span></span><br><span class="line">	<span class="keyword">private</span> String barcode;			<span class="comment">//条形码</span></span><br><span class="line">	<span class="keyword">private</span> String image;			<span class="comment">//商品图片信息   1.jpg,2.jpg,3.jpg</span></span><br><span class="line">	<span class="keyword">private</span> Long   cid;				<span class="comment">//表示商品的分类id</span></span><br><span class="line">	<span class="keyword">private</span> Integer status;			<span class="comment">//1正常，2下架</span></span><br><span class="line">	</span><br><span class="line">	<span class="comment">//为了满足页面调用需求,添加get方法</span></span><br><span class="line">	<span class="keyword">public</span> String[] getImages()&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> image.split(<span class="string">","</span>);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-3-3商品查询页面分析"><a href="#2-3-3商品查询页面分析" class="headerlink" title="2.3.3商品查询页面分析"></a>2.3.3商品查询页面分析</h3><figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;table <span class="class"><span class="keyword">class</span></span>=<span class="string">"easyui-datagrid"</span> id=<span class="string">"itemList"</span> title=<span class="string">"商品列表"</span> </span><br><span class="line">       data-options=<span class="string">"singleSelect:false,fitColumns:true,collapsible:true,pagination:true,url:'/item/query',method:'get',pageSize:20,toolbar:toolbar"</span>&gt;</span><br><span class="line">    &lt;thead&gt;</span><br><span class="line">        &lt;tr&gt;</span><br><span class="line">        	&lt;th data-options="field:'ck',checkbox:true"&gt;&lt;/th&gt;</span><br><span class="line">        	&lt;th data-options="field:'id',width:60"&gt;商品ID&lt;/th&gt;</span><br><span class="line">            &lt;th data-options="field:'title',width:200"&gt;商品标题&lt;/th&gt;</span><br><span class="line">            &lt;th data-options="field:'cid',width:100,align:'center',formatter:KindEditorUtil.findItemCatName"&gt;叶子类目&lt;/th&gt;</span><br><span class="line">            &lt;th data-options="field:'sellPoint',width:100"&gt;卖点&lt;/th&gt;</span><br><span class="line">            &lt;th data-options="field:'price',width:70,align:'right',formatter:KindEditorUtil.formatPrice"&gt;价格&lt;/th&gt;</span><br><span class="line">            &lt;th data-options="field:'num',width:70,align:'right'"&gt;库存数量&lt;/th&gt;</span><br><span class="line">            &lt;th data-options="field:'barcode',width:100"&gt;条形码&lt;/th&gt;</span><br><span class="line">            &lt;th data-options="field:'status',width:60,align:'center',formatter:KindEditorUtil.formatItemStatus"&gt;状态&lt;/th&gt;</span><br><span class="line">            &lt;th data-options="field:'created',width:130,align:'center',formatter:KindEditorUtil.formatDateTime"&gt;创建日期&lt;/th&gt;</span><br><span class="line">            &lt;th data-options="field:'updated',width:130,align:'center',formatter:KindEditorUtil.formatDateTime"&gt;更新日期&lt;/th&gt;</span><br><span class="line">        &lt;/tr&gt;</span><br><span class="line">    &lt;/thead&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-3-4请求url分析"><a href="#2-3-4请求url分析" class="headerlink" title="2.3.4请求url分析"></a>2.3.4请求url分析</h3><p>​    说明:easyUI中如果添加了分页插件,则会动态的拼接page/rows参数.</p>
<p>​                <img src= "/img/loading.gif" data-src="day05.assets/image-20200410155345808.png" alt="image-20200410155345808"></p>
<h3 id="2-3-5编辑ItemController"><a href="#2-3-5编辑ItemController" class="headerlink" title="2.3.5编辑ItemController"></a>2.3.5编辑ItemController</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RestController</span></span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/item"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemController</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> ItemService itemService;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 业务分析:</span></span><br><span class="line"><span class="comment">	 * 	根据分页要求,动态查询商品全部记录信息.</span></span><br><span class="line"><span class="comment">	 * 	url:http://localhost:8091/item/query?page=1&amp;rows=40</span></span><br><span class="line"><span class="comment">	 *  参数说明:  page 当前页</span></span><br><span class="line"><span class="comment">	 *  		  rows  每页的行数</span></span><br><span class="line"><span class="comment">	 *  返回值: EasyUITable JSON串.</span></span><br><span class="line"><span class="comment">	 *  </span></span><br><span class="line"><span class="comment">	 *  1.手写分页</span></span><br><span class="line"><span class="comment">	 *  2.MP动态分页</span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@RequestMapping</span>(<span class="string">"/query"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> EasyUITable <span class="title">findItemByPage</span><span class="params">(Integer page,Integer rows)</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> itemService.findItemByPage(page,rows);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-3-6编辑ItemService"><a href="#2-3-6编辑ItemService" class="headerlink" title="2.3.6编辑ItemService"></a>2.3.6编辑ItemService</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ItemServiceImpl</span> <span class="keyword">implements</span> <span class="title">ItemService</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="meta">@Autowired</span></span><br><span class="line">	<span class="keyword">private</span> ItemMapper itemMapper;</span><br><span class="line"></span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 1.以结果为导向</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * 数组取值:含头不含尾</span></span><br><span class="line"><span class="comment">	 * 分页查询:</span></span><br><span class="line"><span class="comment">	 *  SELECT * FROM tb_item LIMIT 起始位置,查询行数</span></span><br><span class="line"><span class="comment">		第一页: SELECT * FROM tb_item LIMIT 0,20    共21个记录    0-19下标</span></span><br><span class="line"><span class="comment">		第二页: SELECT * FROM tb_item LIMIT 20,20			 20-39下标		</span></span><br><span class="line"><span class="comment">		第三页: SELECT * FROM tb_item LIMIT 40,20			 40-59下标</span></span><br><span class="line"><span class="comment">		第N页:  SELECT * FROM tb_item LIMIT (page-1)*rows,rows</span></span><br><span class="line"><span class="comment"> 	 */</span></span><br><span class="line">	<span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> EasyUITable <span class="title">findItemByPage</span><span class="params">(Integer page, Integer rows)</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//1.total 表示商品查询的记录总数  不需要where条件</span></span><br><span class="line">		<span class="keyword">int</span> total = itemMapper.selectCount(<span class="keyword">null</span>);</span><br><span class="line">		<span class="comment">//2.rowsItem 每页展现的记录  需要使用分页操作</span></span><br><span class="line">		<span class="keyword">int</span> start = (page-<span class="number">1</span>)* rows;</span><br><span class="line">		List&lt;Item&gt; itemList = itemMapper.findItemByPage(start,rows);</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> EasyUITable(total, itemList);</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-3-7编辑ItemMapper"><a href="#2-3-7编辑ItemMapper" class="headerlink" title="2.3.7编辑ItemMapper"></a>2.3.7编辑ItemMapper</h3><p>1.编辑接口</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">ItemMapper</span> <span class="keyword">extends</span> <span class="title">BaseMapper</span>&lt;<span class="title">Item</span>&gt;</span>&#123;</span><br><span class="line"></span><br><span class="line">	<span class="function">List&lt;Item&gt; <span class="title">findItemByPage</span><span class="params">(Integer start, Integer rows)</span></span>;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>2.编辑XML映射文件</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;mapper namespace=<span class="string">"com.jt.mapper.ItemMapper"</span>&gt;</span><br><span class="line">	</span><br><span class="line">	&lt;select id=<span class="string">"findItemByPage"</span> resultType=<span class="string">"Item"</span>&gt;</span><br><span class="line">		SELECT * FROM tb_item ORDER BY updated DESC LIMIT #&#123;start&#125;,#&#123;rows&#125;</span><br><span class="line">	&lt;/select&gt;</span><br><span class="line">	</span><br><span class="line">&lt;/mapper&gt;</span><br></pre></td></tr></table></figure>

<h3 id="2-3-8页面效果"><a href="#2-3-8页面效果" class="headerlink" title="2.3.8页面效果"></a>2.3.8页面效果</h3><p><img src= "/img/loading.gif" data-src="day05.assets/image-20200410165147320.png" alt="image-20200410165147320"></p>
<h2 id="2-4MP方式实现分页查询"><a href="#2-4MP方式实现分页查询" class="headerlink" title="2.4MP方式实现分页查询"></a>2.4MP方式实现分页查询</h2><h3 id="2-4-1编辑MP的拦截器"><a href="#2-4-1编辑MP的拦截器" class="headerlink" title="2.4.1编辑MP的拦截器"></a>2.4.1编辑MP的拦截器</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//标识配置类 </span></span><br><span class="line"><span class="meta">@Configuration</span>   <span class="comment">//相当于.xml的配置文件</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MybatisPlusConfig</span> </span>&#123;</span><br><span class="line">	</span><br><span class="line">	<span class="comment">/**</span></span><br><span class="line"><span class="comment">	 * 将方法的返回值的结果,交给Spring容器管理</span></span><br><span class="line"><span class="comment">	 * Spring内部封装了一个Map集合管理实例化的对象.</span></span><br><span class="line"><span class="comment">	 * Map&lt;key,value&gt;</span></span><br><span class="line"><span class="comment">	 * 		key: bean的ID    方法名称paginationInterceptor</span></span><br><span class="line"><span class="comment">	 * 		value: 实例化后的对象    new PaginationInterceptor()</span></span><br><span class="line"><span class="comment">	 * </span></span><br><span class="line"><span class="comment">	 * 交给spring容器管理之后,如果需要直接注入即可.</span></span><br><span class="line"><span class="comment">	 * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">	 */</span></span><br><span class="line">	<span class="meta">@Bean</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> PaginationInterceptor <span class="title">paginationInterceptor</span><span class="params">()</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="comment">//进行分页操作时,会被拦截器对象拦截,之后开始MP的分页</span></span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> PaginationInterceptor();</span><br><span class="line">	&#125;</span><br><span class="line">	</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-4-2编辑ItemController"><a href="#2-4-2编辑ItemController" class="headerlink" title="2.4.2编辑ItemController"></a>2.4.2编辑ItemController</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/query"</span>)</span><br><span class="line">	<span class="function"><span class="keyword">public</span> EasyUITable <span class="title">findItemByPage</span><span class="params">(Integer page,Integer rows)</span> </span>&#123;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">return</span> itemService.findItemByPage(page,rows);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-4-3编辑ItemService"><a href="#2-4-3编辑ItemService" class="headerlink" title="2.4.3编辑ItemService"></a>2.4.3编辑ItemService</h3><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> EasyUITable <span class="title">findItemByPage</span><span class="params">(Integer page, Integer rows)</span> </span>&#123;</span><br><span class="line">		<span class="comment">//使用MP的方式进行分片 满足mp的规则  传递查询的参数</span></span><br><span class="line">		Page&lt;Item&gt; iPage = <span class="keyword">new</span> Page&lt;&gt;(page, rows);</span><br><span class="line">		<span class="comment">//条件:根据updated进行排序</span></span><br><span class="line">		QueryWrapper&lt;Item&gt; queryWrapper = <span class="keyword">new</span> QueryWrapper&lt;&gt;();</span><br><span class="line">		queryWrapper.orderByDesc(<span class="string">"updated"</span>);</span><br><span class="line">		<span class="comment">//将分页查询的结果封装个Page对象</span></span><br><span class="line">		Page&lt;Item&gt; itemPage = itemMapper.selectPage(iPage, queryWrapper);</span><br><span class="line">		<span class="comment">//从分页对象中动态取值.</span></span><br><span class="line">		<span class="keyword">int</span> total = (<span class="keyword">int</span>) itemPage.getTotal();			<span class="comment">//获取记录总数</span></span><br><span class="line">		List&lt;Item&gt; itemList = itemPage.getRecords();	<span class="comment">//获取当前分页后的记录</span></span><br><span class="line">		<span class="keyword">return</span> <span class="keyword">new</span> EasyUITable(total, itemList);</span><br><span class="line">	&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-5格式化数据"><a href="#2-5格式化数据" class="headerlink" title="2.5格式化数据"></a>2.5格式化数据</h2><h3 id="2-5-1格式化价格"><a href="#2-5-1格式化价格" class="headerlink" title="2.5.1格式化价格"></a>2.5.1格式化价格</h3><p>说明:数据库中价格是long整数, 但是页面中的价格是经过处理的小数.</p>
<p>1.页面分析:</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;th data-options="field:'price',width:70,align:'right',formatter:KindEditorUtil.formatPrice"&gt;价格&lt;/th&gt;</span><br></pre></td></tr></table></figure>

<p>2.页面JS</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 格式化价格  val:需要转化的数据  row转化的行数</span></span><br><span class="line">	formatPrice : function(val,row)&#123;</span><br><span class="line">		<span class="keyword">return</span> (val/<span class="number">100</span>).toFixed(<span class="number">2</span>); <span class="comment">//保留2位小数.</span></span><br><span class="line">	&#125;,</span><br></pre></td></tr></table></figure>

<h3 id="2-5-2格式化时间"><a href="#2-5-2格式化时间" class="headerlink" title="2.5.2格式化时间"></a>2.5.2格式化时间</h3><p>​    1.页面分析</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">&lt;th data-options="field:'created',width:130,align:'center',formatter:KindEditorUtil.formatDateTime"&gt;创建日期&lt;/th&gt;</span><br></pre></td></tr></table></figure>

<p>​    2.页面JS</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 格式化时间</span><br><span class="line">	formatDateTime : function(val,row)&#123;</span><br><span class="line">		var now &#x3D; new Date(val);</span><br><span class="line">    	return now.format(&quot;yyyy-MM-dd hh:mm:ss&quot;);</span><br><span class="line">	&#125;,</span><br></pre></td></tr></table></figure>



<h1 id="作业"><a href="#作业" class="headerlink" title="作业:"></a>作业:</h1><p>1.分析格式化代码如何调用common.js的</p>
<p>2.实现格式化叶子类目</p>
<p>​    SELECT NAME FROM tb_item_cat WHERE id = 177</p>
<p>​    1.新建pojo/mapper/service/controller    根据id返回结果信息. </p>
<p>​    10分钟  A级    15分钟 B   20分钟 C     &gt;20 D</p>
<p>3.了解easyUI 12个demo</p>
<p>H3C 服务器公司   后台管理界面EasyUI </p>
<p>CSS/JS 定死了修改不易  饿了么elementUI/layUI</p>
<p><a href="https://www.layui.com/" target="_blank" rel="noopener">https://www.layui.com/</a></p>
]]></content>
      <categories>
        <category>EasyUI</category>
      </categories>
      <tags>
        <tag>前端框架</tag>
      </tags>
  </entry>
</search>
